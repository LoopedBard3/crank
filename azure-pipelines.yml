#
# See https://docs.microsoft.com/azure/devops/pipelines/yaml-schema for details
#

variables:
  - name: _TeamName
    value: AspNetCore
  - name: TeamName
    value: AspNetCore
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: _PublishUsingPipelines
    value: true
  - name: _BuildConfig
    value: Release
  - template: /eng/common/templates-official/variables/pool-providers.yml
  # used for post-build phases
  - group: DotNet-AspNet-SDLValidation-Params

# CI and PR triggers
trigger:
  batch: true
  branches:
    include:
    - main
    - release/*

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022
        os: windows
    customBuildTags:
    - ES365AIMigrationTooling

    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          enablePublishBuildArtifacts: true
          enablePublishTestResults: true
          enablePublishBuildAssets: true
          enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
          enableTelemetry: true
          mergeTestResults: true
          jobs:
          - job: Windows
            pool:
              name: $(DncEngInternalBuildPool)
              image: 1es-windows-2022
              os: windows
            variables:
              
            # Publish-Build-Assets provides: MaestroAccessToken, BotAccount-dotnet-maestro-bot-PAT
            - group: Publish-Build-Assets
            - name: _OfficialBuildArgs
              value: /p:DotNetSignType=$(_SignType)
                    /p:TeamName=$(_TeamName)
                    /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                    /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
            - name: _SignType
              value: real
                    
            steps:
            - checkout: self
              clean: true
            - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine $(_OfficialBuildArgs)
              displayName: Build and Publish
            # - task: PublishBuildArtifacts@1
            #   displayName: Upload TestResults
            #   condition: always()
            #   continueOnError: true
            #   inputs:
            #     pathtoPublish: artifacts/TestResults/$(_BuildConfig)/
            #     artifactName: $(Agent.Os)_$(Agent.JobName) TestResults
            #     artifactType: Container
            #     parallel: true
            # - task: PublishBuildArtifacts@1
            #   displayName: Upload package artifacts
            #   condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
            #   inputs:
            #     pathtoPublish: artifacts/packages/
            #     artifactName: artifacts
            #     artifactType: Container
            #     parallel: true
            templateContext:
              outputs:
              - output: buildArtifacts
                PathtoPublish: artifacts/TestResults/$(_BuildConfig)/
                ArtifactName: $(Agent.Os)_$(Agent.JobName) TestResults
              - output: buildArtifacts
                PathtoPublish: artifacts/packages/
                ArtifactName: artifacts

    - template: eng\common\templates-official\post-build\post-build.yml@self
      parameters:
        # Symbol validation isn't being very reliable lately. This should be enabled back
        # once this issue is resolved: https://github.com/dotnet/arcade/issues/2871
        enableSymbolValidation: false
        enableSigningValidation: true
        # It's a private repo in github so this won't pass until we create an internal mirror
        enableSourceLinkValidation: false
        publishingInfraVersion: 3
        # This is to enable SDL runs part of Post-Build Validation Stage
        SDLValidationParameters:
          enable: true
          continueOnError: false
          params: ' -SourceToolsList @("policheck","credscan")
          -TsaInstanceURL $(_TsaInstanceURL)
          -TsaProjectName $(_TsaProjectName)
          -TsaNotificationEmail $(_TsaNotificationEmail)
          -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
          -TsaBugAreaPath $(_TsaBugAreaPath)
          -TsaIterationPath $(_TsaIterationPath)
          -TsaRepositoryName "Crank"
          -TsaCodebaseName "Crank"
          -TsaPublish $True
          -PoliCheckAdditionalRunConfigParams @("UserExclusionPath < $(Build.SourcesDirectory)/eng/PoliCheckExclusions.xml")'
